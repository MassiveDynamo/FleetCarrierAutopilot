name: MSBuild

on: [push]

env:
  # Path to the solution file relative to the root of the project.
  SOLUTION_FILE_PATH: .
  BUILDNUMBER: ${{GITHUB.RUN_NUMBER}}
  MajorVersion: 1
  MinorVersion: 0
  BuildUrl: ${{GITHUB.SERVER_URL}}/MassiveDynamo/FleetCarrierAutopilot/runs/${{GITHUB.RUN_ID}}
  GitSha: ${{GITHUB.SHA}}

  # Configuration type to build.
  # You can convert this to a build matrix if you need coverage of multiple configuration types.
  # https://docs.github.com/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
  BUILD_CONFIGURATION: Release

jobs:
  build:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v2

    - name: Add MSBuild to PATH
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Setup VSTest Path
      uses: darenm/Setup-VSTest@v1

    - name: Display the path
      run: invoke-command { ([Environment]::GetEnvironmentVariables()).GetEnumerator() | sort -Property name | Format-Table -AutoSize -Wrap }
      shell: powershell

    - name: Restore NuGet packages
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: nuget restore ${{env.SOLUTION_FILE_PATH}}

    - name: Build
      working-directory: ${{env.GITHUB_WORKSPACE}}
      # Add additional options to the MSBuild command line here (like platform or verbosity level).
      # See https://docs.microsoft.com/visualstudio/msbuild/msbuild-command-line-reference
      run: msbuild /m /p:Configuration=${{env.BUILD_CONFIGURATION}} /p:Version=${{env.MajorVersion}}.${{env.MinorVersion}}.${{env.BUILDNUMBER}} /p:BuildUrl=${{env.BuildUrl}} /p:GitSha=${{env.GitSha}} ${{env.SOLUTION_FILE_PATH}}

    - name: Test
      run: vstest.console.exe ${{env.SOLUTION_FILE_PATH}}/src/Tests/UtilityTest/bin/Release/UtilityTest.dll

    - name: Archive setup artifacts
      uses: actions/upload-artifact@v2
      with:
        name: Install Fleet Carrier Autopilot
        path: src/Setup/bin/Release/Install Fleet Carrier Autopilot.msi
